---
# tasks file for ansible-role-tmux

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Installing ncurses
  become: yes
  package:
    name: "{{ curses_package }}"
    state: present

- name: Installing libevent
  become: yes
  package:
    name: "{{ libevent_package }}"
    state: present


- name: Getting latest tmux version
  shell: git ls-remote --tags https://github.com/tmux/tmux.git | sed 's/.*\///' | egrep "^[0-9]*(\.[0-9]*)?([a-z]?)$" | sort | tail -n1
  register: tmux_git
  changed_when: false

- name: Removing any tmux package
  become: yes
  package:
    name: tmux
    state: absent

- name: Checking if tmux is installed
  stat:
    path: /usr/bin/tmux
  register: tmux_installed

- name: Getting current tmux version
  shell: /usr/bin/tmux -V | sed 's/tmux //'
  when: tmux_installed.stat.exists
  register: tmux_local
  changed_when: false

- name: Set forced version
  set_fact:
    tmux_git_version: "{{ tmux_install_version }}"
  when: tmux_force_install | bool

- name: Set latest tmux version
  set_fact:
    tmux_git_version: "{{ tmux_git.stdout }}"
  when: not tmux_force_install

- name: Set local tmux version
  set_fact:
    tmux_local_version: "{{ tmux_local.stdout }}"
  when: tmux_installed.stat.exists

- include_tasks: uninstall.yml
  when: 
    - tmux_installed.stat.exists 
    - (tmux_git_version != tmux_local_version) or tmux_force_install

- include_tasks: install.yml
  when: not tmux_installed.stat.exists or 
        tmux_force_install or 
        (tmux_git_version != tmux_local_version)